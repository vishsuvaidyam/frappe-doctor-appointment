[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"w-full bg-info h-100\">\n     <div class=\"container mt-5\">\n    <table class=\"table table-striped table-hover\">\n      <thead class=\"table-dark\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Patient</th>\n          <th scope=\"col\">Age</th>\n          <th scope=\"col\">Date & Time</th>\n           <th scope=\"col\">Doctor</th>\n          <th scope=\"col\">Fees</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">1</th>\n          <td>John Doe</td>\n          <td>John Doe</td>\n          <td>John Doe</td>\n          <td>John Doe</td>\n          <td>johndoe@example.com</td>\n          <td>\n            <button class=\"btn btn-primary btn-sm\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>",
  "modified": "2024-12-31 22:30:06.625560",
  "name": "Appointmet Dp",
  "private": 0,
  "roles": [],
  "script": null,
  "style": null
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<!--<div class=\"container mt-5\">-->\n<!--    <table class=\"table\">-->\n<!--        <thead class=\"table-dark\">-->\n<!--            <tr>-->\n<!--                <th>#</th>-->\n<!--                <th>Patient</th>-->\n<!--                <th>Age</th>-->\n<!--                <th>Gender</th>-->\n<!--                <th>Date & Time</th>-->\n<!--                <th>Doctor</th>-->\n<!--                <th>Fees</th>-->\n<!--                <th>Actions</th>-->\n<!--            </tr>-->\n<!--        </thead>-->\n<!--        <tbody class=\"appointment-table-body\">-->\n<!--        </tbody>-->\n<!--    </table> -->\n<!--</div>-->\n<div class=\"container mt-5 w-full\">\n  <table class=\"table table-bordered\" style=\"width: 150%;\">\n    <thead class=\"table-dark\">\n      <tr>\n        <th style=\"width: 5%;\">#</th>\n        <th style=\"width: 20%;\">Patient</th>\n        <th style=\"width: 10%;\">Age</th>\n        <th style=\"width: 10%;\">Gender</th>\n        <th style=\"width: 20%;\">Date & Time</th>\n        <th style=\"width: 15%;\">Doctor</th>\n        <th style=\"width: 10%;\">Fees</th>\n        <th style=\"width: 10%;\">Actions</th>\n      </tr>\n    </thead>\n    <tbody class=\"appointment-table-body\">\n    </tbody>\n  </table>\n</div>\n",
  "modified": "2025-01-06 14:40:06.647899",
  "name": "Appointment Report",
  "private": 0,
  "roles": [],
  "script": "// frappe.call({\n//     method: \"appointments_management.controllers.api.my_appointment\",\n//     callback: function (response) {\n//         if (response.message) {\n//             const data = response.message;\n//             console.log(\"API Data:\", data);\n\n//             const tableBody = root_element.querySelector(\".appointment-table-body\");\n//             tableBody.innerHTML = \"\";  \n\n//             data.forEach((item, index) => {\n//                 const row = document.createElement(\"tr\");\n//                  if (localStorage.getItem(item.name) === \"Accepted\") {\n//                     row.classList.add(\"bg-success\", \"text-white\");\n//                 }\n\n//                 row.innerHTML = `\n//                     <th scope=\"row\">${index + 1}</th>\n//                     <td>${item.patient || \"N/A\"}</td>\n//                     <td>${item.pataient_age || \"N/A\"}</td>\n//                     <td>${item.gender || \"N/A\"}</td>\n//                     <td>${item.datetime || \"N/A\"}</td>\n//                     <td>${item.doctor_name || \"N/A\"}</td>\n//                     <td>${item.doctor_fees || \"N/A\"}</td>\n//                     <td>\n//                         <button class=\"btn btn-primary send-email-btn\">Accept</button>\n//                         <button class=\"btn btn-warning reject-email-btn\">Reject</button>\n//                         <button class=\"btn border border-danger delete-btn px-4 py-2\">Delete</button>\n//                     </td>\n//                 `;\n\n//                 tableBody.appendChild(row);\n\n//                  const sendEmailBtn = row.querySelector(\".send-email-btn\");\n//                     sendEmailBtn.addEventListener(\"click\", function () {\n//                     sendEmail(item.email, item.patient, item.doctor_name, item.datetime, \"accept\");\n//                     acceptAppointment(item.name, row);  // Changed item.doctor_name to item.name\n//                 });\n\n//               const rejectEmailBtn = row.querySelector(\".reject-email-btn\");\n//                 rejectEmailBtn.addEventListener(\"click\", function () {\n//                     sendEmail(item.email, item.patient, item.doctor_name, item.datetime, \"reject\");\n//                     rejectAppointment(item.name, row);  // Reject appointment and update the UI\n//                 });\n//                 const deleteBtn = row.querySelector(\".delete-btn\");\n//                 deleteBtn.addEventListener(\"click\", function () {\n//                     deleteAppointment(item.name, row);\n//                 });\n//             });\n//         }\n//     },\n// });\n\n// // Function to send email (accept or reject)\n// function sendEmail(email, patient, doctorName, datetime, action) {\n//     if (!email) {\n//         frappe.msgprint(\"No email address available for this appointment.\");\n//         return;\n//     }\n\n//     let method = action === \"accept\" ? \"appointments_management.controllers.api.send_accept_email\" : \"appointments_management.controllers.api.send_reject_email\";\n\n//     frappe.call({\n//         method: method, // Backend method based on action\n//         args: {\n//             recipient_email: email,\n//             patient: patient,\n//             doctor_name: doctorName,\n//             datetime: datetime,\n//         },\n//         callback: function (response) {\n//             if (response.message === \"success\") {\n//                 frappe.msgprint(action === \"accept\" ? \"Appointment accepted and email sent!\" : \"Rejection email sent!\");\n//             } else {\n//                 frappe.msgprint(\"Failed to send email. Please try again.\");\n//             }\n//         },\n//     });\n// }\n\n// function rejectAppointment(appointmentName, row) {\n//     frappe.call({\n//         method: \"appointments_management.controllers.api.reject_appointment\", // Backend method to reject the appointment\n//         args: {\n//             appointment_name: appointmentName,\n//             status: \"Rejected\", // Status to mark the appointment as rejected\n//         },\n//         callback: function (response) {\n//             if (response.message === \"success\") {\n//                 frappe.msgprint(\"Appointment rejected successfully!\");\n//                 const statusCell = row.querySelector(\".status-cell\");\n//                 if (statusCell) {\n//                     statusCell.innerText = \"Rejected\"; // Update status in the table\n//                 }\n//             } else {\n//                 frappe.msgprint(\"Failed to reject appointment. Please try again.\");\n//             }\n//         },\n//     });\n// }\n\n\n// function acceptAppointment(appointmentName, row) {\n//     frappe.call({\n//         method: \"appointments_management.controllers.api.accept_appointment\", // Backend method to accept the appointment\n//         args: {\n//             appointment_name: appointmentName,\n//             status: \"Accepted\", // Status to mark the appointment as accepted\n//         },\n//         callback: function (response) {\n//             if (response.message === \"success\") {\n//                 frappe.msgprint(\"Appointment accepted successfully!\");\n//                 row.classList.add(\"bg-success\", \"text-white\");\n//                 const statusCell = row.querySelector(\".status-cell\");\n//                 if (statusCell) {\n//                     statusCell.innerText = \"Accepted\"; // Update status in the table\n//                 }\n//             } else {\n//                 frappe.msgprint(\"Failed to accept appointment. Please try again.\");\n//             }\n//         },\n//     });\n// }\n\n// function rejectAppointment(appointmentName, row) {\n//     frappe.call({\n//         method: \"appointments_management.controllers.api.reject_appointment\", // Backend method to reject the appointment\n//         args: {\n//             appointment_name: appointmentName,\n//             status: \"Rejected\", // Status to mark the appointment as rejected\n//         },\n//         callback: function (response) {\n//             if (response.message === \"success\") {\n//                 frappe.msgprint(\"Appointment rejected successfully!\");\n//                 row.classList.add(\"bg-danger\", \"text-white\");\n//                 const statusCell = row.querySelector(\".status-cell\");\n//                 if (statusCell) {\n//                     statusCell.innerText = \"Rejected\"; // Update status in the table\n//                 }\n//             } else {\n//                 frappe.msgprint(\"Failed to reject appointment. Please try again.\");\n//             }\n//         },\n//     });\n// }\n\n// function deleteAppointment(appointmentName, row) {\n//     frappe.call({\n//         method: \"appointments_management.controllers.api.delete_appointment\", // Backend method for deleting an appointment\n//         args: {\n//             appointment_name: appointmentName,\n//         },\n//         callback: function (response) {\n//             if (response.message === \"success\") {\n//                 frappe.msgprint(\"Appointment deleted successfully!\");\n//                 row.remove(); // Remove the row from the table\n//             } else {\n//                 frappe.msgprint(\"Failed to delete appointment. Please try again.\");\n//             }\n//         },\n//     });\n// }\n\nfrappe.call({\n    method: \"appointments_management.controllers.api.my_appointment\",\n    callback: function (response) {\n        if (response.message) {\n            const data = response.message;\n            console.log(\"API Data:\", data);\n\n            const tableBody = root_element.querySelector(\".appointment-table-body\");\n            tableBody.innerHTML = \"\";  \n\n            data.forEach((item, index) => {\n                const row = document.createElement(\"tr\");\n                if (localStorage.getItem(item.name) === \"Accepted\") {\n                    row.classList.add(\"bg-success\", \"text-white\");\n                } else if (localStorage.getItem(item.name) === \"Rejected\") {\n                    row.classList.add(\"bg-danger\", \"text-white\");\n                }\n\n                row.innerHTML = `\n                    <th scope=\"row\">${index + 1}</th>\n                    <td>${item.patient || \"N/A\"}</td>\n                    <td>${item.patient_age || \"N/A\"}</td>\n                    <td>${item.gender || \"N/A\"}</td>\n                    <td>${item.datetime || \"N/A\"}</td>\n                    <td>${item.doctor_name || \"N/A\"}</td>\n                    <td>${item.doctor_fees || \"N/A\"}</td>\n                    <td class=\"flex bg-light\" style=\"gap:10px;\">\n                        <button class=\"btn btn-primary send-email-btn\">Accept</button>\n                        <button class=\"btn btn-warning reject-email-btn\">Reject</button>\n                    </td>\n                `;\n\n                tableBody.appendChild(row);\n\n                const sendEmailBtn = row.querySelector(\".send-email-btn\");\n                sendEmailBtn.addEventListener(\"click\", function () {\n                    // Check if the button is already disabled (accepted)\n                    if (sendEmailBtn.disabled) return;  \n                    sendEmail(item.email, item.patient, item.doctor_name, item.datetime, \"accept\");\n                    acceptAppointment(item.name, row, sendEmailBtn);  \n                });\n\n                const rejectEmailBtn = row.querySelector(\".reject-email-btn\");\n                rejectEmailBtn.addEventListener(\"click\", function () {\n                    sendEmail(item.email, item.patient, item.doctor_name, item.datetime, \"reject\");\n                    rejectAppointment(item.name, row);  \n                });\n            });\n        }\n    },\n});\n\n// Function to send email (accept or reject)\nfunction sendEmail(email, patient, doctorName, datetime, action) {\n    if (!email) {\n        frappe.msgprint(\"No email address available for this appointment.\");\n        return;\n    }\n\n    let method = action === \"accept\" ? \"appointments_management.controllers.api.send_accept_email\" : \"appointments_management.controllers.api.send_reject_email\";\n\n    frappe.call({\n        method: method, \n        args: {\n            recipient_email: email,\n            patient: patient,\n            doctor_name: doctorName,\n            datetime: datetime,\n        },\n        callback: function (response) {\n            if (response.message === \"success\") {\n                frappe.msgprint(action === \"accept\" ? \"Appointment accepted and email sent!\" : \"Rejection email sent!\");\n            } else {\n                frappe.msgprint(\"Failed to send email. Please try again.\");\n            }\n        },\n    });\n}\n\nfunction acceptAppointment(appointmentName, row, sendEmailBtn) {\n    frappe.call({\n        method: \"appointments_management.controllers.api.accept_appointment\",  \n        args: {\n            appointment_name: appointmentName,\n            status: \"Accepted\", \n        },\n        callback: function (response) {\n            if (response.message === \"success\") {\n                frappe.msgprint(\"Appointment accepted successfully!\");\n                row.classList.add(\"bg-success\", \"text-white\");\n                localStorage.setItem(appointmentName, \"Accepted\"); \n                const statusCell = row.querySelector(\".status-cell\");\n                if (statusCell) {\n                    statusCell.innerText = \"Accepted\";\n                }\n                sendEmailBtn.disabled = true; \n            } else {\n                frappe.msgprint(\"Failed to accept appointment. Please try again.\");\n            }\n        },\n    });\n}\n\nfunction rejectAppointment(appointmentName, row) {\n    frappe.call({\n        method: \"appointments_management.controllers.api.reject_appointment\",  \n        args: {\n            appointment_name: appointmentName,\n            status: \"Rejected\",  \n        },\n        callback: function (response) {\n            if (response.message === \"success\") {\n                frappe.msgprint(\"Appointment rejected successfully!\");\n                row.classList.add(\"bg-danger\", \"text-white\");\n                localStorage.setItem(appointmentName, \"Rejected\");  \n                const statusCell = row.querySelector(\".status-cell\");\n                if (statusCell) {\n                    statusCell.innerText = \"Rejected\"; \n                }\n            } else {\n                frappe.msgprint(\"Failed to reject appointment. Please try again.\");\n            }\n        },\n    });\n}\n\n// function deleteAppointment(appointmentName, row) {\n//     frappe.call({\n//         method: \"appointments_management.controllers.api.delete_appointment\", // Backend method for deleting an appointment\n//         args: {\n//             appointment_name: appointmentName,\n//         },\n//         callback: function (response) {\n//             if (response.message === \"success\") {\n//                 frappe.msgprint(\"Appointment deleted successfully!\");\n//                 row.remove(); // Remove the row from the table\n//             } else {\n//                 frappe.msgprint(\"Failed to delete appointment. Please try again.\");\n//             }\n//         },\n//     });\n// }\n",
  "style": null
 }
]