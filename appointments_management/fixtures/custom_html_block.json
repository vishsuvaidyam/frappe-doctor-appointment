[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"w-full bg-info h-100\">\n     <div class=\"container mt-5\">\n    <table class=\"table table-striped table-hover\">\n      <thead class=\"table-dark\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Patient</th>\n          <th scope=\"col\">Age</th>\n          <th scope=\"col\">Date & Time</th>\n           <th scope=\"col\">Doctor</th>\n          <th scope=\"col\">Fees</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">1</th>\n          <td>John Doe</td>\n          <td>John Doe</td>\n          <td>John Doe</td>\n          <td>John Doe</td>\n          <td>johndoe@example.com</td>\n          <td>\n            <button class=\"btn btn-primary btn-sm\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>",
  "modified": "2024-12-31 22:30:06.625560",
  "name": "Appointmet Dp",
  "private": 0,
  "roles": [],
  "script": null,
  "style": null
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "\n<div class=\" mt-5 w-full\">\n  <table class=\"table table-bordered\" style=\"width: 100%;\">\n    <thead class=\"table-dark\">\n      <tr>\n        <th class=\"text-center\">Sno.</th>\n        <th>Patient</th>\n        <th class=\"text-center\">Age</th>\n        <th class=\"text-center\">Gender</th>\n        <th class=\"text-center\">Date & Time</th>\n        <th>Doctor</th>\n        <th class=\"text-center\" >Fees</th>\n        <th class=\"text-center\" >Status</th>\n        <th class=\"text-center\">Actions</th>\n      </tr>\n    </thead>\n    <tbody class=\"appointment-table-body\">\n    </tbody>\n  </table>\n</div>",
  "modified": "2025-01-07 21:06:22.170403",
  "name": "Appointment Report",
  "private": 0,
  "roles": [],
  "script": "frappe.call({\n    method: \"appointments_management.controllers.api.my_appointment\",\n    callback: function (response) {\n        if (response.message) {\n            const data = response.message;\n            console.log(\"API Data:\", data);\n\n            const tableBody = root_element.querySelector(\".appointment-table-body\");\n            tableBody.innerHTML = \"\"; // Clear the table body\n\n            data.forEach((item, index) => {\n                const row = document.createElement(\"tr\");\n\n                // Determine status and background class\n                const status = localStorage.getItem(item.name) || \"Pending\";\n                let statusBgClass = \"\";\n                if (status === \"Accepted\") {\n                    statusBgClass = \"bg-success text-white\";\n                } else if (status === \"Rejected\") {\n                    statusBgClass = \"bg-danger text-white\";\n                } else {\n                    statusBgClass = \"bg-warning text-white\";\n                }\n\n                row.innerHTML = `\n                    <th scope=\"row\" class=\"text-center\" style=\"color:black;\">${index + 1}</th>\n                    <td>${item.patient || \"N/A\"}</td>\n                    <td  class=\"text-center\">${item.pataient_age || \"N/A\"}</td>\n                    <td  class=\"text-center\">${item.gender || \"N/A\"}</td>\n                    <td class=\"text-center\">${item.datetime || \"N/A\"}</td>\n                    <td>${item.doctor_name || \"N/A\"}</td>\n                    <td class=\"text-center\">${item.doctor_fees || \"N/A\"}</td>\n                    <td class=\"status-cell text-center ${statusBgClass}\">${status}</td>\n                    <td class=\"flex justify-center\" style=\"gap:10px;\">\n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle dropdownMenuButton text-center pb-2 px-4\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                ...\n                            </button>\n                            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                <button class=\"btn dropdown-item send-email-btn\" ${status === \"Accepted\" ? 'disabled' : ''}>Accept</button>\n                                <button class=\"btn dropdown-item btn-warning de\">Delete</button>\n                                <button class=\"btn dropdown-item reject-email-btn\" ${status === \"Rejected\" ? 'disabled' : ''}>Reject</button>\n                            </div>\n                        </div>\n                    </td>\n                `;\n\n                tableBody.appendChild(row);\n\n                // Dropdown menu functionality\n                const dropdownButton = row.querySelector('.dropdownMenuButton');\n                const dropdownMenu = row.querySelector('.dropdown-menu');\n                if (dropdownButton && dropdownMenu) {\n                    dropdownButton.addEventListener('click', function (event) {\n                        event.stopPropagation(); // Prevent propagation to document click handler\n                        dropdownMenu.classList.toggle('show'); // Toggle dropdown visibility\n                    });\n                }\n\n                // Close dropdown if clicked outside\n                document.addEventListener('click', function (event) {\n                    if (!dropdownButton.contains(event.target) && !dropdownMenu.contains(event.target)) {\n                        dropdownMenu.classList.remove('show');\n                    }\n                });\n\n                // Button functionality\n                const deletes = row.querySelector(\".de\");\n                if (deletes) {\n                    deletes.addEventListener(\"click\", function () {\n                        deleteAppointment(item.name, row);\n                    });\n                }\n\n                const sendEmailBtn = row.querySelector(\".send-email-btn\");\n                if (sendEmailBtn) {\n                    sendEmailBtn.addEventListener(\"click\", function () {\n                        if (sendEmailBtn.disabled) return;\n                        sendEmail(item.email, item.patient, item.doctor_name, item.datetime, \"accept\");\n                        acceptAppointment(item.name, row, sendEmailBtn);\n                    });\n                }\n\n                const rejectEmailBtn = row.querySelector(\".reject-email-btn\");\n                if (rejectEmailBtn) {\n                    rejectEmailBtn.addEventListener(\"click\", function () {\n                        if (rejectEmailBtn.disabled) return;\n                        sendEmail(item.email, item.patient, item.doctor_name, item.datetime, \"reject\");\n                        rejectAppointment(item.name, row, rejectEmailBtn);\n                    });\n                }\n            });\n        }\n    },\n});\n\n\n// Function to send email (accept or reject)\nfunction sendEmail(email, patient, doctorName, datetime, action) {\n    if (!email) {\n        frappe.msgprint(\"No email address available for this appointment.\");\n        return;\n    }\n\n    let method = action === \"accept\" ? \"appointments_management.controllers.api.send_accept_email\" : \"appointments_management.controllers.api.send_reject_email\";\n\n    frappe.call({\n        method: method,\n        args: {\n            recipient_email: email,\n            patient: patient,\n            doctor_name: doctorName,\n            datetime: datetime,\n        },\n        callback: function (response) {\n            if (response.message === \"success\") {\n                frappe.msgprint(action === \"accept\" ? \"Appointment accepted and email sent!\" : \"Rejection email sent!\");\n            } else {\n                frappe.msgprint(\"Failed to send email. Please try again.\");\n            }\n        },\n    });\n}\nfunction acceptAppointment(appointmentName, row, sendEmailBtn) {\n    frappe.call({\n        method: \"appointments_management.controllers.api.accept_appointment\", \n        args: {\n            appointment_name: appointmentName,\n            status: \"Accepted\", \n        },\n        callback: function (response) {\n            if (response.message === \"success\") {\n                frappe.msgprint(\"Appointment accepted successfully!\");\n                localStorage.setItem(appointmentName, \"Accepted\");  \n                sendEmailBtn.disabled = true;  \n                const statusCell = row.querySelector(\".status-cell\");\n                if (statusCell) {\n                    statusCell.innerText = \"Accepted\";  \n                    \n                }\n            } else {\n                frappe.msgprint(\"Failed to accept appointment. Please try again.\");\n            }\n        },\n    });\n}\n\nfunction rejectAppointment(appointmentName, row, rejectEmailBtn) {\n    frappe.call({\n        method: \"appointments_management.controllers.api.reject_appointment\", \n        args: {\n            appointment_name: appointmentName,\n            status: \"Rejected\", \n        },\n        callback: function (response) {\n            if (response.message === \"success\") {\n                frappe.msgprint(\"Appointment rejected successfully!\");\n                localStorage.setItem(appointmentName, \"Rejected\"); \n                rejectEmailBtn.disabled = true;  \n                const statusCell = row.querySelector(\".status-cell\");\n                if (statusCell) {\n                    statusCell.innerText = \"Rejected\"; // Update status in the table\n                }\n            } else {\n                frappe.msgprint(\"Failed to reject appointment. Please try again.\");\n            }\n        },\n    });\n}\n\nfunction deleteAppointment(appointmentName, row) {\n    frappe.call({\n        method: \"appointments_management.controllers.api.delete_appointment\",  \n        args: {\n            appointment_name: appointmentName,\n        },\n        callback: function (response) {\n            if (response.message) {\n                frappe.msgprint({\n                    title: \"Success\",\n                    indicator: \"green\",\n                    message: \"Appointment deleted successfully!\"\n                });\n                row.remove();  \n            } else {\n                frappe.msgprint({\n                    title: \"Error\",\n                    indicator: \"red\",\n                    message: \"Failed to delete appointment. Please try again.\"\n                });\n            }\n        },\n    });\n}\n",
  "style": " \n.dropdown-menu {\n    display: none;  \n    position: absolute;\n    z-index: 1050; \n    background-color: #fff;\n    border: 1px solid rgba(0, 0, 0, 0.15);\n    border-radius: 0.25rem;\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n    min-width: 12rem;\n    right: 0;  \n    transform: translateX(-73%);\n}\n\n/* Show dropdown when 'show' class is added */\n.dropdown-menu.show {\n    display: block;\n}\n\n/* Optional: Style dropdown button for better visibility */\n.dropdown-toggle {\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    background-color: #6c757d;\n    color: white;\n    cursor: pointer;\n}\n\n.dropdown-toggle::after {\n    display: inline-block;\n    margin-left:0;\n    vertical-align: 0.255em;\n    content: \"\";\n    border-top: 0;\n    border-right:0;\n    border-bottom: 0;\n    border-left: 0;\n}\n\n/*.btn:not(.btn-md):not(.btn-lg), div#driver-popover-item .driver-popover-footer button:not(.btn-md):not(.btn-lg) {*/\n/*    padding: 4px 16px;*/\n    \n/*}*/\n\n/* Style for dropdown items */\n.dropdown-item {\n    display: block;\n    width: 100%;\n    padding: 0.375rem 1.25rem;\n    clear: both;\n    font-weight: 400;\n    color: #212529;\n    text-align: inherit;\n    background-color: transparent;\n    border: 0;\n    cursor: pointer;\n}\n\n.dropdown-item:hover {\n    background-color: #f8f9fa;\n}\n\n/* Optional: Style disabled items */\n.dropdown-item:disabled {\n    background-color: #e9ecef;\n    color: #6c757d;\n    cursor: not-allowed;\n}\n"
 }
]